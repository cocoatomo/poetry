# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-03-29 21:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/repositories.md:1
#, no-wrap
msgid "Repositories"
msgstr ""

#. type: Title ##
#: docs/repositories.md:3
#, no-wrap
msgid "Using the PyPI repository"
msgstr ""

#. type: Plain text
#: docs/repositories.md:7
msgid ""
"By default, Poetry is configured to use the [PyPI](https://pypi.org) "
"repository, for package installation and publishing."
msgstr ""

#. type: Plain text
#: docs/repositories.md:10
msgid ""
"So, when you add dependencies to your project, Poetry will assume they are "
"available on PyPI."
msgstr ""

#. type: Plain text
#: docs/repositories.md:12
msgid "This represents most cases and will likely be enough for most users."
msgstr ""

#. type: Title ##
#: docs/repositories.md:14
#, no-wrap
msgid "Using a private repository"
msgstr ""

#. type: Plain text
#: docs/repositories.md:19
msgid ""
"However, at times, you may need to keep your package private while still "
"being able to share it with your teammates. In this case, you will need to "
"use a private repository."
msgstr ""

#. type: Title ###
#: docs/repositories.md:20
#, no-wrap
msgid "Adding a repository"
msgstr ""

#. type: Plain text
#: docs/repositories.md:23
msgid "Adding a new repository is easy with the `config` command."
msgstr ""

#. type: Fenced code block (bash)
#: docs/repositories.md:24
#, no-wrap
msgid "poetry config repositories.foo https://foo.bar/simple/\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:29
msgid "This will set the url for repository `foo` to `https://foo.bar/simple/`."
msgstr ""

#. type: Title ###
#: docs/repositories.md:30
#, no-wrap
msgid "Configuring credentials"
msgstr ""

#. type: Plain text
#: docs/repositories.md:33
msgid ""
"If you want to store your credentials for a specific repository, you can do "
"so easily:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/repositories.md:34
#, no-wrap
msgid "poetry config http-basic.foo username password\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:39
msgid "If you do not specify the password you will be prompted to write it."
msgstr ""

#. type: Plain text
#: docs/repositories.md:41 docs/repositories.md:103
msgid "!!!note"
msgstr ""

#. type: Plain text
#: docs/repositories.md:43
#, no-wrap
msgid ""
"    To publish to PyPI, you can set your credentials for the repository "
"named `pypi`.\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:47
#, no-wrap
msgid ""
"    Note that it is recommended to use [API "
"tokens](https://pypi.org/help/#apitoken)\n"
"    when uploading packages to PyPI.\n"
"    Once you have created a new token, you can tell Poetry to use it:\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:51
#, no-wrap
msgid ""
"    ```bash\n"
"    poetry config pypi-token.pypi my-token\n"
"    ```\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:54
#, no-wrap
msgid ""
"    If you still want to use you username and password, you can do so with "
"the following\n"
"    call to `config`.\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:58
#, no-wrap
msgid ""
"    ```bash\n"
"    poetry config http-basic.pypi username password\n"
"    ```\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:61
msgid ""
"You can also specify the username and password when using the `publish` "
"command with the `--username` and `--password` options."
msgstr ""

#. type: Plain text
#: docs/repositories.md:63
msgid ""
"If a system keyring is available and supported, the password is stored to "
"and retrieved from the keyring. In the above example, the credential will be "
"stored using the name `poetry-repository-pypi`. If access to keyring fails "
"or is unsupported, this will fall back to writing the password to the "
"`auth.toml` file along with the username."
msgstr ""

#. type: Plain text
#: docs/repositories.md:65
msgid ""
"Keyring support is enabled using the [keyring "
"library](https://pypi.org/project/keyring/). For more information on "
"supported backends refer to the [library "
"documentation](https://keyring.readthedocs.io/en/latest/?badge=latest)."
msgstr ""

#. type: Plain text
#: docs/repositories.md:67
msgid "Alternatively, you can use environment variables to provide the credentials:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/repositories.md:68
#, no-wrap
msgid ""
"export POETRY_PYPI_TOKEN_PYPI=my-token\n"
"export POETRY_HTTP_BASIC_PYPI_USERNAME=username\n"
"export POETRY_HTTP_BASIC_PYPI_PASSWORD=password\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:76
msgid ""
"See [Using environment "
"variables](/docs/configuration/#using-environment-variables) for more "
"information on how to configure Poetry with environment variables."
msgstr ""

#. type: Title ####
#: docs/repositories.md:77
#, no-wrap
msgid "Custom certificate authority and mutual TLS authentication"
msgstr ""

#. type: Plain text
#: docs/repositories.md:82
msgid ""
"Poetry supports repositories that are secured by a custom certificate "
"authority as well as those that require certificate-based client "
"authentication.  The following will configure the \"foo\" repository to "
"validate the repository's certificate using a custom certificate authority "
"and use a client certificate (note that these config variables do not both "
"need to be set):"
msgstr ""

#. type: Fenced code block (bash)
#: docs/repositories.md:82
#, no-wrap
msgid ""
"    poetry config certificates.foo.cert /path/to/ca.pem\n"
"    poetry config certificates.foo.client-cert /path/to/client.pem\n"
msgstr ""

#. type: Title ###
#: docs/repositories.md:87
#, no-wrap
msgid "Install dependencies from a private repository"
msgstr ""

#. type: Plain text
#: docs/repositories.md:91
msgid ""
"Now that you can publish to your private repository, you need to be able to "
"install dependencies from it."
msgstr ""

#. type: Plain text
#: docs/repositories.md:93
msgid "For that, you have to edit your `pyproject.toml` file, like so"
msgstr ""

#. type: Fenced code block (toml)
#: docs/repositories.md:94
#, no-wrap
msgid ""
"[[tool.poetry.source]]\n"
"name = \"foo\"\n"
"url = \"https://foo.bar/simple/\"\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:101
msgid "From now on, Poetry will also look for packages in your private repository."
msgstr ""

#. type: Plain text
#: docs/repositories.md:105
#, no-wrap
msgid "    Any custom repository will have precedence over PyPI.\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:108
#, no-wrap
msgid ""
"    If you still want PyPI to be your primary source for your packages\n"
"    you can declare custom repositories as secondary.\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:115
#, no-wrap
msgid ""
"    ```toml\n"
"    [[tool.poetry.source]]\n"
"    name = \"foo\"\n"
"    url = \"https://foo.bar/simple/\"\n"
"    secondary = true\n"
"    ```\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:122
msgid ""
"If your private repository requires HTTP Basic Auth be sure to add the "
"username and password to your `http-basic` configuration using the example "
"above (be sure to use the same name that is in the `tool.poetry.source` "
"section). If your repository requires either a custom certificate authority "
"or client certificates, similarly refer to the example above to configure "
"the `certificates` section. Poetry will use these values to authenticate to "
"your private repository when downloading or looking for packages."
msgstr ""

#. type: Title ###
#: docs/repositories.md:124
#, no-wrap
msgid "Disabling the PyPI repository"
msgstr ""

#. type: Plain text
#: docs/repositories.md:128
msgid ""
"If you want your packages to be exclusively looked up from a private "
"repository, you can set it as the default one by using the `default` keyword"
msgstr ""

#. type: Fenced code block (toml)
#: docs/repositories.md:129
#, no-wrap
msgid ""
"[[tool.poetry.source]]\n"
"name = \"foo\"\n"
"url = \"https://foo.bar/simple/\"\n"
"default = true\n"
msgstr ""

#. type: Plain text
#: docs/repositories.md:136
msgid "A default source will also be the fallback source if you add other sources."
msgstr ""
