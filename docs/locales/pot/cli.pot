# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-03-29 21:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/cli.md:1
#, no-wrap
msgid "Commands"
msgstr ""

#. type: Plain text
#: docs/cli.md:5
msgid ""
"You've already learned how to use the command-line interface to do some "
"things.  This chapter documents all the available commands."
msgstr ""

#. type: Plain text
#: docs/cli.md:8
msgid ""
"To get help from the command-line, simply call `poetry` to see the complete "
"list of commands, then `--help` combined with any of those can give you more "
"information."
msgstr ""

#. type: Plain text
#: docs/cli.md:10
msgid ""
"As `Poetry` uses [cleo](https://github.com/sdispater/cleo) you can call "
"commands by short name if it's not ambiguous."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:11
#, no-wrap
msgid "poetry up\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:16
msgid "calls `poetry update`."
msgstr ""

#. type: Title ##
#: docs/cli.md:18
#, no-wrap
msgid "Global options"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:26
msgid ""
"`--verbose (-v|vv|vvv)`: Increase the verbosity of messages: \"-v\" for "
"normal output, \"-vv\" for more verbose output and \"-vvv\" for debug."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:26
msgid "`--help (-h)` : Display help information."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:26
msgid "`--quiet (-q)` : Do not output any message."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:26
msgid "`--ansi`: Force ANSI output."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:26
msgid "`--no-ansi`: Disable ANSI output."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:26
msgid "`--version (-V)`: Display this application version."
msgstr ""

#. type: Title ##
#: docs/cli.md:28
#, no-wrap
msgid "new"
msgstr ""

#. type: Plain text
#: docs/cli.md:32
msgid ""
"This command will help you kickstart your new Python project by creating a "
"directory structure suitable for most projects."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:33
#, no-wrap
msgid "poetry new my-package\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:38
msgid "will create a folder as follows:"
msgstr ""

#. type: Fenced code block (text)
#: docs/cli.md:39
#, no-wrap
msgid ""
"my-package\n"
"├── pyproject.toml\n"
"├── README.rst\n"
"├── my_package\n"
"│   └── __init__.py\n"
"└── tests\n"
"    ├── __init__.py\n"
"    └── test_my_package.py\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:52
msgid ""
"If you want to name your project differently than the folder, you can pass "
"the `--name` option:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:53
#, no-wrap
msgid "poetry new my-folder --name my-package\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:58
msgid "If you want to use a src folder, you can use the `--src` option:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:59
#, no-wrap
msgid "poetry new --src my-package\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:64
msgid "That will create a folder structure as follows:"
msgstr ""

#. type: Fenced code block (text)
#: docs/cli.md:65
#, no-wrap
msgid ""
"my-package\n"
"├── pyproject.toml\n"
"├── README.rst\n"
"├── src\n"
"│   └── my_package\n"
"│       └── __init__.py\n"
"└── tests\n"
"    ├── __init__.py\n"
"    └── test_my_package.py\n"
msgstr ""

#. type: Title ##
#: docs/cli.md:77
#, no-wrap
msgid "init"
msgstr ""

#. type: Plain text
#: docs/cli.md:81
msgid ""
"This command will help you create a `pyproject.toml` file interactively by "
"prompting you to provide basic information about your package."
msgstr ""

#. type: Plain text
#: docs/cli.md:83
msgid ""
"It will interactively ask you to fill in the fields, while using some smart "
"defaults."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:84
#, no-wrap
msgid "poetry init\n"
msgstr ""

#. type: Title ###
#: docs/cli.md:88 docs/cli.md:145 docs/cli.md:168 docs/cli.md:242 docs/cli.md:259 docs/cli.md:288 docs/cli.md:306 docs/cli.md:322 docs/cli.md:346 docs/cli.md:404 docs/cli.md:438
#, no-wrap
msgid "Options"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:95
msgid "`--name`: Name of the package."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:95
msgid "`--description`: Description of the package."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:95
msgid "`--author`: Author of the package."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:95
msgid ""
"`--dependency`: Package to require with a version constraint. Should be in "
"format `foo:1.0.0`."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:95
msgid "`--dev-dependency`: Development requirements, see `--require`."
msgstr ""

#. type: Title ##
#: docs/cli.md:97
#, no-wrap
msgid "install"
msgstr ""

#. type: Plain text
#: docs/cli.md:101
msgid ""
"The `install` command reads the `pyproject.toml` file from the current "
"project, resolves the dependencies, and installs them."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:102
#, no-wrap
msgid "poetry install\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:109
msgid ""
"If there is a `poetry.lock` file in the current directory, it will use the "
"exact versions from there instead of resolving them.  This ensures that "
"everyone using the library will get the same versions of the dependencies."
msgstr ""

#. type: Plain text
#: docs/cli.md:111
msgid ""
"If there is no `poetry.lock` file, Poetry will create one after dependency "
"resolution."
msgstr ""

#. type: Plain text
#: docs/cli.md:114
msgid ""
"You can specify to the command that you do not want the development "
"dependencies installed by passing the `--no-dev` option."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:115
#, no-wrap
msgid "poetry install --no-dev\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:121
msgid ""
"You can also specify the extras you want installed by passing the "
"`--E|--extras` option (See [Extras](#extras) for more info)"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:122
#, no-wrap
msgid ""
"poetry install --extras \"mysql pgsql\"\n"
"poetry install -E mysql -E pgsql\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:128
msgid ""
"By default `poetry` will install your project's package everytime you run "
"`install`:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:129
#, no-wrap
msgid ""
"$ poetry install\n"
"Installing dependencies from lock file\n"
"\n"
"No dependencies to install or update\n"
"\n"
"  - Installing <your-package-name> (x.x.x)\n"
"\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:140
msgid "If you want to skip this installation, use the `--no-root` option."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:141
#, no-wrap
msgid "poetry install --no-root\n"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:150
msgid "`--no-dev`: Do not install dev dependencies."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:150
msgid "`--no-root`: Do not install the root package (your project)."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:150
msgid "`--extras (-E)`: Features to install (multiple values allowed)."
msgstr ""

#. type: Title ##
#: docs/cli.md:151
#, no-wrap
msgid "update"
msgstr ""

#. type: Plain text
#: docs/cli.md:155
msgid ""
"In order to get the latest versions of the dependencies and to update the "
"`poetry.lock` file, you should use the `update` command."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:156
#, no-wrap
msgid "poetry update\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:161
msgid ""
"This will resolve all dependencies of the project and write the exact "
"versions into `poetry.lock`."
msgstr ""

#. type: Plain text
#: docs/cli.md:163
msgid ""
"If you just want to update a few packages and not all, you can list them as "
"such:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:164
#, no-wrap
msgid "poetry update requests toml\n"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:173 docs/cli.md:248 docs/cli.md:263
msgid ""
"`--dry-run` : Outputs the operations but will not execute anything "
"(implicitly enables --verbose)."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:173
msgid "`--no-dev` : Do not install dev dependencies."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:173
msgid "`--lock` : Do not perform install (only update the lockfile)."
msgstr ""

#. type: Title ##
#: docs/cli.md:174
#, no-wrap
msgid "add"
msgstr ""

#. type: Plain text
#: docs/cli.md:177
msgid ""
"The `add` command adds required packages to your `pyproject.toml` and "
"installs them."
msgstr ""

#. type: Plain text
#: docs/cli.md:180
msgid ""
"If you do not specify a version constraint, poetry will choose a suitable "
"one based on the available package versions."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:181
#, no-wrap
msgid "poetry add requests pendulum\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:186
msgid "You also can specify a constraint when adding a package, like so:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:187
#, no-wrap
msgid ""
"poetry add pendulum@^2.0.5\n"
"poetry add \"pendulum>=2.0.5\"\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:196
msgid ""
"If you try to add a package that is already present, you will get an error.  "
"However, if you specify a constraint, like above, the dependency will be "
"updated by using the specified constraint. If you want to get the latest "
"version of an already present dependency you can use the special `latest` "
"constraint:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:197
#, no-wrap
msgid "poetry add pendulum@latest\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:202
msgid "You can also add `git` dependencies:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:203
#, no-wrap
msgid "poetry add git+https://github.com/sdispater/pendulum.git\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:209
msgid ""
"If you need to checkout a specific branch, tag or revision, you can specify "
"it when using `add`:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:210
#, no-wrap
msgid ""
"poetry add git+https://github.com/sdispater/pendulum.git#develop\n"
"poetry add git+https://github.com/sdispater/pendulum.git#2.0.5\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:216
msgid "or make them point to a local directory or file:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:217
#, no-wrap
msgid ""
"poetry add ./my-package/\n"
"poetry add ../my-package/dist/my-package-0.1.0.tar.gz\n"
"poetry add ../my-package/dist/my_package-0.1.0.whl\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:225
msgid ""
"Path dependencies pointing to a local directory will be installed in "
"editable mode (i.e. setuptools \"develop mode\").  It means that changes in "
"the local directory will be reflected directly in environment."
msgstr ""

#. type: Plain text
#: docs/cli.md:227
msgid ""
"If you don't want the dependency to be installed in editable mode you can "
"specify it in the `pyproject.toml` file:"
msgstr ""

#. type: Fenced code block (toml)
#: docs/cli.md:228
#, no-wrap
msgid ""
"[tool.poetry.dependencies]\n"
"my-package = {path = \"../my/path\", develop = false}\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:235
msgid ""
"If the package(s) you want to install provide extras, you can specify them "
"when adding the package:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:236
#, no-wrap
msgid ""
"poetry add requests[security,socks]\n"
"poetry add \"requests[security,socks]~=2.22.0\"\n"
"poetry add \"git+https://github.com/pallets/flask.git@1.1.1[dotenv,dev]\"\n"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:248
msgid "`--dev (-D)`: Add package as development dependency."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:248
msgid "`--path`: The path to a dependency."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:248
msgid "`--optional` : Add as an optional dependency."
msgstr ""

#. type: Title ##
#: docs/cli.md:250
#, no-wrap
msgid "remove"
msgstr ""

#. type: Plain text
#: docs/cli.md:254
msgid ""
"The `remove` command removes a package from the current list of installed "
"packages."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:255
#, no-wrap
msgid "poetry remove pendulum\n"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:263
msgid "`--dev (-D)`: Removes a package from the development dependencies."
msgstr ""

#. type: Title ##
#: docs/cli.md:265
#, no-wrap
msgid "show"
msgstr ""

#. type: Plain text
#: docs/cli.md:268
msgid "To list all of the available packages, you can use the `show` command."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:269
#, no-wrap
msgid "poetry show\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:274
msgid ""
"If you want to see the details of a certain package, you can pass the "
"package name."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:275
#, no-wrap
msgid ""
"poetry show pendulum\n"
"\n"
"name        : pendulum\n"
"version     : 1.4.2\n"
"description : Python datetimes made easy\n"
"\n"
"dependencies:\n"
" - python-dateutil >=2.6.1\n"
" - tzlocal >=1.4\n"
" - pytzdata >=2017.2.2\n"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:294
msgid "`--no-dev`: Do not list the dev dependencies."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:294
msgid "`--tree`: List the dependencies as a tree."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:294
msgid "`--latest (-l)`: Show the latest version."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:294
msgid ""
"`--outdated (-o)`: Show the latest version but only for packages that are "
"outdated."
msgstr ""

#. type: Title ##
#: docs/cli.md:296
#, no-wrap
msgid "build"
msgstr ""

#. type: Plain text
#: docs/cli.md:299
msgid "The `build` command builds the source and wheels archives."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:300
#, no-wrap
msgid "poetry build\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:305
msgid "Note that, at the moment, only pure python wheels are supported."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:309
msgid "`--format (-f)`: Limit the format to either `wheel` or `sdist`."
msgstr ""

#. type: Title ##
#: docs/cli.md:310
#, no-wrap
msgid "publish"
msgstr ""

#. type: Plain text
#: docs/cli.md:313
msgid ""
"This command publishes the package, previously built with the "
"[`build`](#build) command, to the remote repository."
msgstr ""

#. type: Plain text
#: docs/cli.md:315
msgid ""
"It will automatically register the package before uploading if this is the "
"first time it is submitted."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:316
#, no-wrap
msgid "poetry publish\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:321
msgid "It can also build the package if you pass it the `--build` option."
msgstr ""

#. type: Plain text
#: docs/cli.md:328
#, no-wrap
msgid ""
"* `--repository (-r)`: The repository to register the package to (default: "
"`pypi`).\n"
"Should match a repository name set by the [`config`](#config) command.\n"
"* `--username (-u)`: The username to access the repository.\n"
"* `--password (-p)`: The password to access the repository.\n"
msgstr ""

#. type: Title ##
#: docs/cli.md:329
#, no-wrap
msgid "config"
msgstr ""

#. type: Plain text
#: docs/cli.md:332
msgid ""
"The `config` command allows you to edit poetry config settings and "
"repositories."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:333
#, no-wrap
msgid "poetry config --list\n"
msgstr ""

#. type: Title ###
#: docs/cli.md:337
#, no-wrap
msgid "Usage"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:339
#, no-wrap
msgid ""
"poetry config [options] [setting-key] [setting-value1] "
"... [setting-valueN]\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:345
msgid ""
"`setting-key` is a configuration option name and `setting-value1` is a "
"configuration value.  See [Configuration](/docs/configuration/) for all "
"available settings."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:350
msgid "`--unset`: Remove the configuration element named by `setting-key`."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:350
msgid "`--list`: Show the list of current config variables."
msgstr ""

#. type: Title ##
#: docs/cli.md:351
#, no-wrap
msgid "run"
msgstr ""

#. type: Plain text
#: docs/cli.md:354
msgid ""
"The `run` command executes the given command inside the project's "
"virtualenv."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:355
#, no-wrap
msgid "poetry run python -V\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:360
msgid "It can also execute one of the scripts defined in `pyproject.toml`."
msgstr ""

#. type: Plain text
#: docs/cli.md:362
msgid "So, if you have a script defined like this:"
msgstr ""

#. type: Fenced code block (toml)
#: docs/cli.md:363
#, no-wrap
msgid ""
"[tool.poetry.scripts]\n"
"my-script = \"my_module:main\"\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:369
msgid "You can execute it like so:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:370
#, no-wrap
msgid "poetry run my-script\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:375
msgid "Note that this command has no option."
msgstr ""

#. type: Title ##
#: docs/cli.md:376
#, no-wrap
msgid "shell"
msgstr ""

#. type: Plain text
#: docs/cli.md:382
msgid ""
"The `shell` command spawns a shell, according to the `$SHELL` environment "
"variable, within the virtual environment.  If one doesn't exist yet, it will "
"be created."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:383
#, no-wrap
msgid "poetry shell\n"
msgstr ""

#. type: Title ##
#: docs/cli.md:387
#, no-wrap
msgid "check"
msgstr ""

#. type: Plain text
#: docs/cli.md:391
msgid ""
"The `check` command validates the structure of the `pyproject.toml` file and "
"returns a detailed report if there are any errors."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:392
#, no-wrap
msgid "poetry check\n"
msgstr ""

#. type: Title ##
#: docs/cli.md:396
#, no-wrap
msgid "search"
msgstr ""

#. type: Plain text
#: docs/cli.md:399
msgid "This command searches for packages on a remote index."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:400
#, no-wrap
msgid "poetry search requests pendulum\n"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:407
msgid "`--only-name (-N)`: Search only in name."
msgstr ""

#. type: Title ##
#: docs/cli.md:408
#, no-wrap
msgid "lock"
msgstr ""

#. type: Plain text
#: docs/cli.md:411
msgid ""
"This command locks (without installing) the dependencies specified in "
"`pyproject.toml`."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:412
#, no-wrap
msgid "poetry lock\n"
msgstr ""

#. type: Title ##
#: docs/cli.md:416
#, no-wrap
msgid "version"
msgstr ""

#. type: Plain text
#: docs/cli.md:421
msgid ""
"This command shows the current version of the project or bumps the version "
"of the project and writes the new version back to `pyproject.toml` if a "
"valid bump rule is provided."
msgstr ""

#. type: Plain text
#: docs/cli.md:424
msgid ""
"The new version should ideally be a valid semver string or a valid bump "
"rule: `patch`, `minor`, `major`, `prepatch`, `preminor`, `premajor`, "
"`prerelease`."
msgstr ""

#. type: Title ##
#: docs/cli.md:426
#, no-wrap
msgid "export"
msgstr ""

#. type: Plain text
#: docs/cli.md:429
msgid "This command exports the lock file to other formats."
msgstr ""

#. type: Fenced code block (bash)
#: docs/cli.md:430
#, no-wrap
msgid "poetry export -f requirements.txt > requirements.txt\n"
msgstr ""

#. type: Plain text
#: docs/cli.md:435
msgid "!!!note"
msgstr ""

#. type: Plain text
#: docs/cli.md:437
#, no-wrap
msgid "    Only the `requirements.txt` format is currently supported.\n"
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:448
msgid ""
"`--format (-f)`: The format to export to.  Currently, only "
"`requirements.txt` is supported."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:448
msgid ""
"`--output (-o)`: The name of the output file.  If omitted, print to standard "
"output."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:448
msgid "`--dev`: Include development dependencies."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:448
msgid "`--extras (-E)`: Extra sets of dependencies to include."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:448
msgid "`--without-hashes`: Exclude hashes from the exported file."
msgstr ""

#. type: Bullet: '* '
#: docs/cli.md:448
msgid "`--with-credentials`: Include credentials for extra indices."
msgstr ""

#. type: Title ##
#: docs/cli.md:449
#, no-wrap
msgid "env"
msgstr ""

#. type: Plain text
#: docs/cli.md:453
msgid ""
"The `env` command regroups sub commands to interact with the virtualenvs "
"associated with a specific project."
msgstr ""

#. type: Plain text
#: docs/cli.md:454
msgid ""
"See [Managing environments](./managing-environments.md) for more information "
"about these commands."
msgstr ""
