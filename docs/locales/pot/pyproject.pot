# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-03-29 21:00+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/pyproject.md:1
#, no-wrap
msgid "The `pyproject.toml` file"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:4
msgid ""
"The `tool.poetry` section of the `pyproject.toml` file is composed of "
"multiple sections."
msgstr ""

#. type: Title ##
#: docs/pyproject.md:5
#, no-wrap
msgid "name"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:8
msgid "The name of the package. **Required**"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:9
#, no-wrap
msgid "version"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:12
msgid "The version of the package. **Required**"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:15
msgid ""
"This should follow [semantic versioning](http://semver.org/). However it "
"will not be enforced and you remain free to follow another specification."
msgstr ""

#. type: Title ##
#: docs/pyproject.md:16
#, no-wrap
msgid "description"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:19
msgid "A short description of the package. **Required**"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:20
#, no-wrap
msgid "license"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:23
msgid "The license of the package."
msgstr ""

#. type: Plain text
#: docs/pyproject.md:25
msgid "The recommended notation for the most common licenses is (alphabetical):"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "Apache-2.0"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "BSD-2-Clause"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "BSD-3-Clause"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "BSD-4-Clause"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "GPL-2.0-only"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "GPL-2.0-or-later"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "GPL-3.0-only"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "GPL-3.0-or-later"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "LGPL-2.1-only"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "LGPL-2.1-or-later"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "LGPL-3.0-only"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "LGPL-3.0-or-later"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:39
msgid "MIT"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:42
msgid ""
"Optional, but it is highly recommended to supply this.  More identifiers are "
"listed at the [SPDX Open Source License "
"Registry](https://www.spdx.org/licenses/)."
msgstr ""

#. type: Title ##
#: docs/pyproject.md:43
#, no-wrap
msgid "authors"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:46
msgid "The authors of the package. **Required**"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:48
#, no-wrap
msgid ""
"This is a list of authors and should contain at least one author. Authors "
"must be in the form `name <email>`.\n"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:49
#, no-wrap
msgid "maintainers"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:52
msgid "The maintainers of the package. **Optional**"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:54
#, no-wrap
msgid ""
"This is a list of maintainers and should be distinct from "
"authors. Maintainers may contain an email and be in the form `name "
"<email>`.\n"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:55
#, no-wrap
msgid "readme"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:58
msgid "The readme file of the package. **Optional**"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:60
msgid "The file can be either `README.rst` or `README.md`."
msgstr ""

#. type: Title ##
#: docs/pyproject.md:61
#, no-wrap
msgid "homepage"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:64
msgid "An URL to the website of the project. **Optional**"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:65
#, no-wrap
msgid "repository"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:68
msgid "An URL to the repository of the project. **Optional**"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:69
#, no-wrap
msgid "documentation"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:72
msgid "An URL to the documentation of the project. **Optional**"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:73
#, no-wrap
msgid "keywords"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:76
msgid "A list of keywords (max: 5) that the package is related to. **Optional**"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:77
#, no-wrap
msgid "classifiers"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:80
msgid ""
"A list of PyPI [trove classifiers](https://pypi.org/classifiers/) that "
"describe the project. **Optional**"
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:81
#, no-wrap
msgid ""
"[tool.poetry]\n"
"# ...\n"
"classifiers = [\n"
"    \"Topic :: Software Development :: Build Tools\",\n"
"    \"Topic :: Software Development :: Libraries :: Python Modules\"\n"
"]\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:91 docs/pyproject.md:137 docs/pyproject.md:152 docs/pyproject.md:195 docs/pyproject.md:288
msgid "!!!note"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:93
#, no-wrap
msgid ""
"    Note that Python classifiers are still automatically added for you and "
"are determined by your `python` requirement.\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:95
#, no-wrap
msgid ""
"    The `license` property will also set the License classifier "
"automatically.\n"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:96
#, no-wrap
msgid "packages"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:99
msgid "A list of packages and modules to include in the final distribution."
msgstr ""

#. type: Plain text
#: docs/pyproject.md:102
msgid ""
"If your project structure differs from the standard one supported by "
"`poetry`, you can specify the packages you want to include in the final "
"distribution."
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:103
#, no-wrap
msgid ""
"[tool.poetry]\n"
"# ...\n"
"packages = [\n"
"    { include = \"my_package\" },\n"
"    { include = \"extra_package/**/*.py\" },\n"
"]\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:113
msgid ""
"If your package is stored inside a \"source\" directory, you must specify "
"it:"
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:114
#, no-wrap
msgid ""
"[tool.poetry]\n"
"# ...\n"
"packages = [\n"
"    { include = \"my_package\", from = \"lib\" },\n"
"]\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:124
msgid ""
"If you want to restrict a package to a specific [build](#build) format you "
"can specify it by using `format`:"
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:125
#, no-wrap
msgid ""
"[tool.poetry]\n"
"# ...\n"
"packages = [\n"
"    { include = \"my_package\" },\n"
"    { include = \"tests\", format = \"sdist\" },\n"
"]\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:135
msgid ""
"From now on, only the `sdist` build archive will include the `tests` "
"package."
msgstr ""

#. type: Plain text
#: docs/pyproject.md:140
#, no-wrap
msgid ""
"    Using `packages` disables the package auto-detection feature meaning you "
"have to\n"
"    **explicitly** specify the \"default\" package.\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:143
#, no-wrap
msgid ""
"    For instance, if you have a package named `my_package` and you want to "
"also include\n"
"    another package named `extra_package`, you will need to specify "
"`my_package` explicitly:\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:150
#, no-wrap
msgid ""
"    ```toml\n"
"    packages = [\n"
"        { include = \"my_package\" },\n"
"        { include = \"extra_package\" },\n"
"    ]\n"
"    ```\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:154
#, no-wrap
msgid "    Poetry is clever enough to detect Python subpackages.\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:156
#, no-wrap
msgid ""
"    Thus, you only have to specify the directory where your root package "
"resides.\n"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:157
#, no-wrap
msgid "include and exclude"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:160
msgid "A list of patterns that will be included in the final package."
msgstr ""

#. type: Plain text
#: docs/pyproject.md:163
msgid ""
"You can explicitly specify to Poetry that a set of globs should be ignored "
"or included for the purposes of packaging.  The globs specified in the "
"exclude field identify a set of files that are not included when a package "
"is built."
msgstr ""

#. type: Plain text
#: docs/pyproject.md:165
msgid ""
"If a VCS is being used for a package, the exclude field will be seeded with "
"the VCSâ€™ ignore settings (`.gitignore` for git for example)."
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:166
#, no-wrap
msgid ""
"[tool.poetry]\n"
"# ...\n"
"include = [\"CHANGELOG.md\"]\n"
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:172
#, no-wrap
msgid "exclude = [\"my_package/excluded.py\"]\n"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:176
#, no-wrap
msgid "`dependencies` and `dev-dependencies`"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:180
msgid ""
"Poetry is configured to look for dependencies on [PyPi](https://pypi.org) by "
"default.  Only the name and a version string are required in this case."
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:181
#, no-wrap
msgid ""
"[tool.poetry.dependencies]\n"
"requests = \"^2.13.0\"\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:187
msgid ""
"If you want to use a private repository, you can add it to your "
"`pyproject.toml` file, like so:"
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:188
#, no-wrap
msgid ""
"[[tool.poetry.source]]\n"
"name = 'private'\n"
"url = 'http://example.com/simple'\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:198
#, no-wrap
msgid ""
"    Be aware that declaring the python version for which your package\n"
"    is compatible is mandatory:\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:203
#, no-wrap
msgid ""
"    ```toml\n"
"    [tool.poetry.dependencies]\n"
"    python = \"^3.6\"\n"
"    ```\n"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:204
#, no-wrap
msgid "`scripts`"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:207
msgid ""
"This section describe the scripts or executable that will be installed when "
"installing the package"
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:208
#, no-wrap
msgid ""
"[tool.poetry.scripts]\n"
"poetry = 'poetry.console:run'\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:214
msgid ""
"Here, we will have the `poetry` script installed which will execute "
"`console.run` in the `poetry` package."
msgstr ""

#. type: Title ##
#: docs/pyproject.md:215
#, no-wrap
msgid "`extras`"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:218
msgid "Poetry supports extras to allow expression of:"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:221
msgid "optional dependencies, which enhance a package, but are not required; and"
msgstr ""

#. type: Bullet: '* '
#: docs/pyproject.md:221
msgid "clusters of optional dependencies."
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:222
#, no-wrap
msgid ""
"[tool.poetry]\n"
"name = \"awesome\"\n"
"\n"
"[tool.poetry.dependencies]\n"
"# These packages are mandatory and form the core of this packageâ€™s "
"distribution.\n"
"mandatory = \"^1.0\"\n"
"\n"
"# A list of all of the optional dependencies, some of which are included in "
"the\n"
"# below `extras`. They can be opted into by apps.\n"
"psycopg2 = { version = \"^2.7\", optional = true }\n"
"mysqlclient = { version = \"^1.3\", optional = true }\n"
"\n"
"[tool.poetry.extras]\n"
"mysql = [\"mysqlclient\"]\n"
"pgsql = [\"psycopg2\"]\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:241
msgid ""
"When installing packages, you can specify extras by using the `-E|--extras` "
"option:"
msgstr ""

#. type: Fenced code block (bash)
#: docs/pyproject.md:242
#, no-wrap
msgid ""
"poetry install --extras \"mysql pgsql\"\n"
"poetry install -E mysql -E pgsql\n"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:247
#, no-wrap
msgid "`plugins`"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:252
msgid ""
"Poetry supports arbitrary plugins which work similarly to [setuptools entry "
"points](http://setuptools.readthedocs.io/en/latest/setuptools.html).  To "
"match the example in the setuptools documentation, you would use the "
"following:"
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:253
#, no-wrap
msgid ""
"[tool.poetry.plugins] # Optional super table\n"
"\n"
"[tool.poetry.plugins.\"blogtool.parsers\"]\n"
"\".rst\" = \"some_module:SomeClass\"\n"
msgstr ""

#. type: Title ##
#: docs/pyproject.md:260
#, no-wrap
msgid "`urls`"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:264
msgid ""
"In addition to the basic urls (`homepage`, `repository` and "
"`documentation`), you can specify any custom url in the `urls` section."
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:265
#, no-wrap
msgid ""
"[tool.poetry.urls]\n"
"\"Bug Tracker\" = \"https://github.com/python-poetry/poetry/issues\"\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:271
msgid ""
"If you publish you package on PyPI, they will appear in the `Project Links` "
"section."
msgstr ""

#. type: Title ##
#: docs/pyproject.md:272
#, no-wrap
msgid "Poetry and PEP-517"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:276
msgid ""
"[PEP-517](https://www.python.org/dev/peps/pep-0517/) introduces a standard "
"way to define alternative build systems to build a Python project."
msgstr ""

#. type: Plain text
#: docs/pyproject.md:280
msgid ""
"Poetry is compliant with PEP-517 so if you use Poetry to manage your Python "
"project you should reference it in the `build-system` section of the "
"`pyproject.toml` file like so:"
msgstr ""

#. type: Fenced code block (toml)
#: docs/pyproject.md:281
#, no-wrap
msgid ""
"[build-system]\n"
"requires = [\"poetry>=0.12\"]\n"
"build-backend = \"poetry.masonry.api\"\n"
msgstr ""

#. type: Plain text
#: docs/pyproject.md:289
#, no-wrap
msgid ""
"    When using the `new` or `init` command this section will be "
"automatically added.\n"
msgstr ""
