# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# tomo, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-03-29 21:00+0900\n"
"PO-Revision-Date: 2020-03-29 08:15+0000\n"
"Last-Translator: tomo, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/cocoatomo/teams/108519/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title #
#: docs/index.md:1
#, no-wrap
msgid "Introduction"
msgstr "入門"

#. type: Plain text
#: docs/index.md:5
msgid ""
"Poetry is a tool for dependency management and packaging in Python.  It "
"allows you to declare the libraries your project depends on and it will "
"manage (install/update) them for you."
msgstr ""
"PoetryはPythonでの依存関係管理とパッケージングのためのツールです。\n"
"Poetryを使うとプロジェクトが依存しているライブラリを宣言でき、それらを管理 (インストールおよびアップデート) してくれます。"

#. type: Title ##
#: docs/index.md:7
#, no-wrap
msgid "System requirements"
msgstr "システム要件"

#. type: Plain text
#: docs/index.md:11
msgid ""
"Poetry requires Python 2.7 or 3.4+. It is multi-platform and the goal is to "
"make it work equally well on Windows, Linux and OSX."
msgstr ""
"PoetryはPython 2.7あるいはPython 3.4以降を必要とします。\n"
"Poetryはマルチプラットフォームに対応していて、Windows, Linux, OSXで同じように動作することを目標としています。"

#. type: Title ##
#: docs/index.md:13
#, no-wrap
msgid "Installation"
msgstr "インストール"

#. type: Plain text
#: docs/index.md:18
msgid ""
"Poetry provides a custom installer that will install `poetry` isolated from "
"the rest of your system by vendorizing its dependencies. This is the "
"recommended way of installing `poetry`."
msgstr ""
"Poetryは独自のインストーラーを提供していて、依存パッケージをベンダー化 (vendorizing) によって `poetry` を、システムの他のものから隔離された状態でインストールします。\n"
"これは推奨された `poetry` のインストール方法です。"

#. type: Title ###
#: docs/index.md:19
#, no-wrap
msgid "osx / linux / bashonwindows install instructions"
msgstr "osx / linux / bashonwindows インストール手順"

#. type: Fenced code block (bash)
#: docs/index.md:20
#, no-wrap
msgid ""
"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-"
"poetry.py | python\n"
msgstr ""
"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-"
"poetry.py | python\n"

#. type: Title ###
#: docs/index.md:23
#, no-wrap
msgid "windows powershell install instructions"
msgstr "windows powershell インストール手順"

#. type: Fenced code block (powershell)
#: docs/index.md:24
#, no-wrap
msgid ""
"(Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-"
"poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python\n"
msgstr ""
"(Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-"
"poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python\n"

#. type: Plain text
#: docs/index.md:29 docs/index.md:180
msgid "!!! note"
msgstr "!!! 注意"

#. type: Plain text
#: docs/index.md:32
#, no-wrap
msgid ""
"    You only need to install Poetry once. It will automatically pick up the current\n"
"    Python version and use it to [create virtualenvs](/docs/basic-usage/#poetry-and-virtualenvs) accordingly.\n"
msgstr ""
"    Poetryは一度だけインストールすれば良いです。Poetryは現在使われているPythonバージョンを自動的に読み取り、\n"
"    それを踏まえて適切に [仮想環境を作成](/poetry-ja/basic-usage/#poetry-and-virtualenvs) します。\n"

#. type: Plain text
#: docs/index.md:35
msgid ""
"The installer installs the `poetry` tool to Poetry's `bin` directory.  On "
"Unix it is located at `$HOME/.poetry/bin` and on Windows at "
"`%USERPROFILE%\\.poetry\\bin`."
msgstr ""
"このインストーラーは、 `poetry` ツールをPoetryの `bin` ディレクトリにインストールします。\n"
"そのディレクトリの位置は、Unixでは `$HOME/.poetry/bin` で、Windowsでは `%USERPROFILE%\\.poetry\\bin` です。"

#. type: Plain text
#: docs/index.md:39
msgid ""
"This directory will be in your `$PATH` environment variable, which means you"
" can run them from the shell without further configuration.  Open a new "
"shell and type the following:"
msgstr ""
"このディレクトリは `$PATH` 環境変数に含まれ、何かしらの設定をしなくてもシェルから実行できるということになります。\n"
"シェルを新たに開き、次のコマンドを打ち込んでください:"

#. type: Fenced code block (bash)
#: docs/index.md:40
#, no-wrap
msgid "poetry --version\n"
msgstr "poetry --version\n"

#. type: Plain text
#: docs/index.md:48
msgid ""
"If you see something like `Poetry 0.12.0` then you are ready to use Poetry."
"  If you decide Poetry isn't your thing, you can completely remove it from "
"your system by running the installer again with the `--uninstall` option or "
"by setting the `POETRY_UNINSTALL` environment variable before executing the "
"installer."
msgstr ""
"`Poetry 0.12.0` のような出力が見えたら、Poetryを使う準備が整いました。\n"
"もしPoetryが自分には向かないと判断したら、 `--uninstall` オプションを付けるか、インストーラーを実行する前に `POETRY_UNINSTALL` 環境変数を設定するかして、先程のインストーラーを再度実行すると、システムからPoetryを完全に消去できます。"

#. type: Fenced code block (bash)
#: docs/index.md:49
#, no-wrap
msgid ""
"python get-poetry.py --uninstall\n"
"POETRY_UNINSTALL=1 python get-poetry.py\n"
msgstr ""
"python get-poetry.py --uninstall\n"
"POETRY_UNINSTALL=1 python get-poetry.py\n"

#. type: Plain text
#: docs/index.md:55
msgid ""
"By default, Poetry is installed into the user's platform-specific home "
"directory. If you wish to change this, you may define the `POETRY_HOME` "
"environment variable:"
msgstr ""
"デフォルトでは、Poetryはユーザーのプラットフォーム特有のホームディイレクトリにインストールされます。インストールされる場所を変えたい場合は、`POETRY_HOME`"
" 環境変数を設定します:"

#. type: Fenced code block (bash)
#: docs/index.md:56
#, no-wrap
msgid "POETRY_HOME=/etc/poetry python get-poetry.py\n"
msgstr "POETRY_HOME=/etc/poetry python get-poetry.py\n"

#. type: Plain text
#: docs/index.md:62
msgid ""
"If you want to install prerelease versions, you can do so by passing "
"`--preview` to `get-poetry.py` or by using the `POETRY_PREVIEW` environment "
"variable:"
msgstr ""
"プレリリースバージョンをインストールしたい場合は、 `get-poetry.py` に `--preview` を渡すか "
"`POETRY_PREVIEW` 環境変数を使えばできます:"

#. type: Fenced code block (bash)
#: docs/index.md:63
#, no-wrap
msgid ""
"python get-poetry.py --preview\n"
"POETRY_PREVIEW=1 python get-poetry.py\n"
msgstr ""
"python get-poetry.py --preview\n"
"POETRY_PREVIEW=1 python get-poetry.py\n"

#. type: Plain text
#: docs/index.md:70
msgid ""
"Similarly, if you want to install a specific version, you can use "
"`--version` or the `POETRY_VERSION` environment variable:"
msgstr "同様に、特定のバージョンをインストールしたい場合は、 `--version` や `POETRY_VERSION` 環境変数が使えます:"

#. type: Fenced code block (bash)
#: docs/index.md:71
#, no-wrap
msgid ""
"python get-poetry.py --version 0.12.0\n"
"POETRY_VERSION=0.12.0 python get-poetry.py\n"
msgstr ""
"python get-poetry.py --version 0.12.0\n"
"POETRY_VERSION=0.12.0 python get-poetry.py\n"

#. type: Plain text
#: docs/index.md:77 docs/index.md:83 docs/index.md:145 docs/index.md:150
msgid "!!!note"
msgstr "!!!注意"

#. type: Plain text
#: docs/index.md:79
#, no-wrap
msgid "    Note that the installer does not support Poetry releases < 0.12.0.\n"
msgstr "    インストーラーはリリースバージョンが0.12.0より前のPoetryはサポートしていないことに注意してください。\n"

#. type: Title ###
#: docs/index.md:80
#, no-wrap
msgid "Alternative installation methods (not recommended)"
msgstr "他のインストール方法 (非推奨)"

#. type: Plain text
#: docs/index.md:87
#, no-wrap
msgid ""
"    Using alternative installation methods will make Poetry always\n"
"    use the Python version for which it has been installed to create\n"
"    virtualenvs.\n"
msgstr ""
"    他のインストール方法を使うと、Poetryは常に、\n"
"    仮想環境を作成するためにインストールされたバージョンのPythonを使います。\n"

#. type: Plain text
#: docs/index.md:90
#, no-wrap
msgid ""
"    So, you will need to install Poetry for each Python version you\n"
"    want to use and switch between them.\n"
msgstr "そのため、使いたいPythonのバージョンごとにPoetryをインストールし、切り替える必要があります。\n"

#. type: Title ####
#: docs/index.md:91
#, no-wrap
msgid "Installing with `pip`"
msgstr "`pip` でインストール"

#. type: Plain text
#: docs/index.md:94
msgid "Using `pip` to install Poetry is possible."
msgstr "`pip` を使ってPoetryをインストールできます。"

#. type: Fenced code block (bash)
#: docs/index.md:95
#, no-wrap
msgid "pip install --user poetry\n"
msgstr "pip install --user poetry\n"

#. type: Plain text
#: docs/index.md:100
msgid "!!!warning"
msgstr "!!!警告"

#. type: Plain text
#: docs/index.md:103
#, no-wrap
msgid ""
"    Be aware that it will also install Poetry's dependencies\n"
"    which might cause conflicts with other packages.\n"
msgstr ""
"    他のパッケージと衝突を起こす可能性のあるPoetryの依存パッケージを\n"
"    インストールすることにもなるのを認識しておいてください。\n"

#. type: Title ####
#: docs/index.md:104
#, no-wrap
msgid "Installing with `pipx`"
msgstr "`pipx` でインストール"

#. type: Plain text
#: docs/index.md:107
msgid ""
"Using [`pipx`](https://github.com/cs01/pipx) to install Poetry is also "
"possible. [pipx] is used to install Python CLI applications globally while "
"still isolating them in virtual environments. This allows for clean upgrades"
" and uninstalls. pipx supports Python 3.6 and later. If using an earlier "
"version of Python, consider [pipsi](https://github.com/mitsuhiko/pipsi)."
msgstr ""
"[`pipx`](https://github.com/cs01/pipx)を使ってPoetryをインストールすることもできます。\n"
"[pipx]は、PythonのCLIアプリケーションを仮想環境に隔離したまま、システム全体で使えるようにインストールするのに使われます。\n"
"これにより更新やアンインストールが環境を汚さずに行えます。\n"
"pipxはPython 3.6以降のバージョンをサポートしています。\n"
"もっと前のバージョンのPythonを使っている場合は、 [pipsi](https://github.com/mitsuhiko/pipsi)を検討してください。"

#. type: Fenced code block (bash)
#: docs/index.md:108
#, no-wrap
msgid "pipx install poetry\n"
msgstr "pipx install poetry\n"

#. type: Fenced code block (bash)
#: docs/index.md:112
#, no-wrap
msgid "pipx upgrade poetry\n"
msgstr "pipx upgrade poetry\n"

#. type: Fenced code block (bash)
#: docs/index.md:116
#, no-wrap
msgid "pipx uninstall poetry\n"
msgstr "pipx uninstall poetry\n"

#. type: Plain text
#: docs/index.md:121
msgid "[Github repository](https://github.com/cs01/pipx)."
msgstr "[Github repository](https://github.com/cs01/pipx)。"

#. type: Title ##
#: docs/index.md:123
#, no-wrap
msgid "Updating `poetry`"
msgstr "`poetry` のアップデート"

#. type: Plain text
#: docs/index.md:126
msgid ""
"Updating Poetry to the latest stable version is as simple as calling the "
"`self update` command."
msgstr "Poetryを最新バージョンまで更新するのは簡単で `self:update` コマンドを呼び出すだけです。"

#. type: Fenced code block (bash)
#: docs/index.md:127
#, no-wrap
msgid "poetry self update\n"
msgstr "poetry self update\n"

#. type: Plain text
#: docs/index.md:132
msgid ""
"If you want to install pre-release versions, you can use the `--preview` "
"option."
msgstr "プレリリースバージョンをインストールしたい場合は、 `--preview` オプションが使えます。"

#. type: Fenced code block (bash)
#: docs/index.md:133
#, no-wrap
msgid "poetry self update --preview\n"
msgstr "poetry self update --preview\n"

#. type: Plain text
#: docs/index.md:139
msgid ""
"And finally, if you want to install a specific version, you can pass it as "
"an argument to `self update`."
msgstr "最後に、特定のバージョンをインストールしたい場合は、引数としてバージョンを `self update` に渡せます。"

#. type: Fenced code block (bash)
#: docs/index.md:140
#, no-wrap
msgid "poetry self update 0.8.0\n"
msgstr "poetry self update 0.8.0\n"

#. type: Plain text
#: docs/index.md:148
#, no-wrap
msgid ""
"    The `self update` command will only work if you used the recommended\n"
"    installer to install Poetry.\n"
msgstr ""
"    `self update` コマンドが使えるのは、推奨インストーラーを使って\n"
"    Poetryをインストールしたときだけです。\n"

#. type: Plain text
#: docs/index.md:152
#, no-wrap
msgid ""
"    If you are still on poetry version < 1.0 use `poetry self:update` "
"instead.\n"
msgstr "まだ1.0より前のバージョンのpoetryを使っている場合は、`poetry self:update`を使ってください。\n"

#. type: Title ##
#: docs/index.md:154
#, no-wrap
msgid "Enable tab completion for Bash, Fish, or Zsh"
msgstr "Bash, Fish, Zshでの補完の有効化"

#. type: Plain text
#: docs/index.md:158
msgid ""
"`poetry` supports generating completion scripts for Bash, Fish, and Zsh.  "
"See `poetry help completions` for full details, but the gist is as simple as"
" using one of the following:"
msgstr ""
"`poetry` はBash, Fish, Zsh用の補完スクリプトの生成をサポートしています。\n"
"完全な詳細については `poetry help completions` を参照してください。要点は簡単で、次のコマンドのどれか1つを使う、です:"

#. type: Fenced code block (bash)
#: docs/index.md:160
#, no-wrap
msgid ""
"# Bash\n"
"poetry completions bash > /etc/bash_completion.d/poetry.bash-completion\n"
"\n"
"# Bash (macOS/Homebrew)\n"
"poetry completions bash > $(brew --prefix)/etc/bash_completion.d/poetry.bash-completion\n"
"\n"
"# Fish\n"
"poetry completions fish > ~/.config/fish/completions/poetry.fish\n"
"\n"
"# Zsh\n"
"poetry completions zsh > ~/.zfunc/_poetry\n"
"\n"
"# Oh-My-Zsh\n"
"mkdir $ZSH/plugins/poetry\n"
"poetry completions zsh > $ZSH/plugins/poetry/_poetry\n"
"\n"
msgstr ""
"# Bash\n"
"poetry completions bash > /etc/bash_completion.d/poetry.bash-completion\n"
"\n"
"# Bash (macOS/Homebrew)\n"
"poetry completions bash > $(brew --prefix)/etc/bash_completion.d/poetry.bash-completion\n"
"\n"
"# Fish\n"
"poetry completions fish > ~/.config/fish/completions/poetry.fish\n"
"\n"
"# Zsh\n"
"poetry completions zsh > ~/.zfunc/_poetry\n"
"\n"
"# Oh-My-Zsh\n"
"mkdir $ZSH/plugins/poetry\n"
"poetry completions zsh > $ZSH/plugins/poetry/_poetry\n"
"\n"

#. type: Plain text
#: docs/index.md:182
#, no-wrap
msgid ""
"    You may need to restart your shell in order for the changes to take "
"effect.\n"
msgstr "    変更が効くようにするのにシェルを再起動する必要があるかもしれません。\n"

#. type: Plain text
#: docs/index.md:184
msgid ""
"For `zsh`, you must then add the following line in your `~/.zshrc` before "
"`compinit`:"
msgstr "`zsh` では、 `~/.zshrc` の `compinit` より前に次の行を追加しなければなりません:"

#. type: Fenced code block (bash)
#: docs/index.md:185
#, no-wrap
msgid "fpath+=~/.zfunc\n"
msgstr "fpath+=~/.zfunc\n"

#. type: Plain text
#: docs/index.md:190
msgid ""
"For `oh-my-zsh`, you must then enable poetry in your `~/.zshrc` plugins"
msgstr "`oh-my-zsh` では、 `~/.zshrc` プラグインでpoetryを有効化しなければなりません"

#. type: Fenced code block
#: docs/index.md:191
#, no-wrap
msgid ""
"plugins(\n"
"\tpoetry\n"
"\t...\n"
"\t)\n"
msgstr ""
"plugins(\n"
"\tpoetry\n"
"\t...\n"
"\t)\n"
